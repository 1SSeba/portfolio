---
interface Props {
  title: string;
  description?: string;
}

const { title, description = "Mi portfolio personal como desarrollador web y software" } = Astro.props;
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import '../style/global.css'
---

<!DOCTYPE html>
<html lang="es" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <meta name="author" content="SSeba" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:image" content="/og-image.jpg" />
    <meta name="twitter:card" content="summary_large_image" />
    <title>{title}</title>
    <script is:inline>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark')
      } else {
        document.documentElement.classList.remove('dark')
      }
    </script>
  </head>
  <body class="bg-white dark:bg-neutral-900 text-neutral-900 dark:text-neutral-100 antialiased min-h-screen flex flex-col">
    <div class="fixed inset-0 bg-[radial-gradient(ellipse_at_top,_var(--tw-gradient-stops))] from-primary-100/40 via-transparent dark:from-primary-900/20 -z-10"></div>
    <Header />
    <main class="flex-grow pt-16">
      <slot />
    </main>
    <Footer />
    <div class="fixed bottom-6 right-6 z-50">
      <button
        id="back-to-top"
        class="flex items-center justify-center w-12 h-12 bg-white dark:bg-neutral-800 rounded-full shadow-lg opacity-0 transition-all duration-300 translate-y-10 invisible hover:bg-neutral-50 dark:hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-neutral-900"
        aria-label="Back to top"
      >
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5 text-neutral-700 dark:text-neutral-300">
          <path stroke-linecap="round" stroke-linejoin="round" d="m4.5 15.75 7.5-7.5 7.5 7.5" />
        </svg>
      </button>
    </div>

    <script>
      // Back to top button functionality
      document.addEventListener('DOMContentLoaded', () => {
        const backToTop = document.getElementById('back-to-top');
        
        if (backToTop) {
          const toggleBackToTop = () => {
            if (window.scrollY > 300) {
              backToTop.classList.remove('hidden', 'opacity-0', 'translate-y-10');
              backToTop.classList.add('opacity-100', 'translate-y-0');
            } else {
              backToTop.classList.add('opacity-0', 'translate-y-10');
              backToTop.classList.remove('opacity-100', 'translate-y-0');
              setTimeout(() => {
                if (window.scrollY <= 300) {
                  backToTop.classList.add('hidden');
                }
              }, 300);
            }
          };
          
          window.addEventListener('scroll', toggleBackToTop);
          
          backToTop.addEventListener('click', (e) => {
            e.preventDefault();
            window.scrollTo({ top: 0, behavior: 'smooth' });
          });
        }
      });
    </script>
    
    <!-- Animation Library (optional) -->
    <script is:inline src="https://unpkg.com/aos@next/dist/aos.js"></script>
    <script is:inline>
      document.addEventListener('DOMContentLoaded', () => {
        AOS.init({
          duration: 800,
          easing: 'ease-in-out',
          once: true,
        });
      });
    </script>
  </body>
</html>